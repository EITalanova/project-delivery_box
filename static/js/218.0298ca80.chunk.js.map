{"version":3,"file":"static/js/218.0298ca80.chunk.js","mappings":"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","sources":["webpack://project-delivery_box/./src/components/ButtonNavigate/ButtonNavigate.module.scss?87d4","components/ButtonNavigate/ButtonNavigate.jsx","webpack://project-delivery_box/./src/components/Title/Title.module.scss?ae23","components/Title/Title.jsx","redux/cellAvailability/cellAvailabilitySelector.jsx","utilites/handlerCellUtils.jsx","webpack://project-delivery_box/./src/components/SelectCellSizes/SelectCellSizes.module.scss?7272","components/SelectCellSizes/SelectCellSizes.jsx","pages/CellSize.jsx","../node_modules/classnames/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"ButtonNavigate_btn__BhTtl\",\"btnBack\":\"ButtonNavigate_btnBack__BZRN9\",\"btnNext\":\"ButtonNavigate_btnNext__WhUjY\"};","import { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport style from './ButtonNavigate.module.scss';\n\nexport const ButtonNavigate = ({\n  pathBtnBack,\n  pathBtnNext,\n  textBtnNext,\n  className,\n  onClickNext,\n}) => {\n  const navigate = useNavigate();\n  const onClickBack = () => {\n    navigate(-1);\n  };\n\n  return (\n    <div className={className}>\n      <Link\n        className={cn(style.btn, style.btnBack)}\n        to={pathBtnBack}\n        onClick={onClickBack}\n      >\n        НАЗАД\n      </Link>\n      <Link\n        className={cn(style.btn, style.btnNext)}\n        to={pathBtnNext}\n        onClick={onClickNext}\n      >\n        {textBtnNext}\n      </Link>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Title_title__IlEm8\"};","import style from './Title.module.scss';\n\nexport const Title = ({ text }) => {\n  return <h2 className={style.title}>{text}</h2>;\n};\n","export const selectCellAvailability = state => state.cellAvailability.cellAvailability;\nexport const selectIsLoading = state => state.isLoading;","import cellS from '../assets/images/cellS.png';\nimport cellL from '../assets/images/cellL.png';\nimport cellM from '../assets/images/cellM.png';\nimport cellXS from '../assets/images/cellXS.png';\nimport cellXXS from '../assets/images/cellXXS.png';\nimport cellXXXL from '../assets/images/cellXXXL.png';\nimport cellXXL from '../assets/images/cellXXL.png';\nimport cellXL from '../assets/images/cellXL.png';\n\nexport const handlerCellData = (cells, sizeMappings) => {\n  const newCells = cells\n    .filter(cell => Object.keys(sizeMappings).includes(cell.type))\n    .sort((a, b) => {\n      const areaA = a.params.height * a.params.width;\n      const areaB = b.params.height * b.params.width;\n\n      if (areaA === areaB) {\n        return b.params.width - a.params.width;\n      }\n\n      return areaA - areaB;\n    });\n\n  return newCells.map(cell => ({\n    ...cell,\n    name: sizeMappings[cell.type].name,\n    isAvailable: cell.has_empty,\n    cellWidth: Math.round(cell.params.width / 10),\n    cellHeight: Math.round(cell.params.height / 10),\n    height: sizeMappings[cell.type].height,\n    width: sizeMappings[cell.type].width,\n    icon: sizeMappings[cell.type].icon,\n  }));\n};\n\nexport const sizeMappings = {\n  '200.0x110.0x405.0': { name: 'XXS', height: 80, width: 186, icon: cellXXS },\n  '200.0x160.0x405.0': { name: 'XS', height: 116, width: 186, icon: cellXS },\n  '380.0x110.0x405.0': { name: 'S', height: 132, width: 186, icon: cellS },\n  '200.0x209.0x405.0': { name: 'M', height: 80, width: 240, icon: cellM },\n  '380.0x160.0x405.0': { name: 'L', height: 116, width: 240, icon: cellL },\n  '380.0x209.0x405.0': { name: 'XL', height: 132, width: 240, icon: cellXL },\n  '645.0x210.0x405.0': {\n    name: 'XXL',\n    height: 140,\n    width: 304,\n    icon: cellXXL,\n  },\n  '645.0x365.0x405.0': {\n    name: 'XXXL',\n    height: 208,\n    width: 304,\n    icon: cellXXXL,\n  },\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"selectCellBox\":\"SelectCellSizes_selectCellBox__Tlag-\",\"cellBox\":\"SelectCellSizes_cellBox__nd7dt\",\"cellEll\":\"SelectCellSizes_cellEll__jfuF0\",\"cellTextTitle\":\"SelectCellSizes_cellTextTitle__Mv3Zy\",\"cellTextDiscription\":\"SelectCellSizes_cellTextDiscription__Wkd6p\",\"cellEllNotAvailable\":\"SelectCellSizes_cellEllNotAvailable__gggvl\",\"cellEllIsChoice\":\"SelectCellSizes_cellEllIsChoice__tDyod\",\"cellTextBox\":\"SelectCellSizes_cellTextBox__9rAlO\",\"btnNavigateBox\":\"SelectCellSizes_btnNavigateBox__2QL4z\"};","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectCellAvailability } from '../../redux/cellAvailability/cellAvailabilitySelector';\nimport { fetchCellAvailability } from '../../redux/cellAvailability/cellAvailabilityThunk';\n\nimport { ButtonNavigate } from 'components/ButtonNavigate/ButtonNavigate';\nimport { Title } from 'components/Title/Title';\nimport { handlerCellData, sizeMappings } from 'utilites/handlerCellUtils';\nimport { DEVICE_UID } from 'api';\nimport style from './SelectCellSizes.module.scss';\n\nexport const SelectCellSizes = () => {\n  const dispatch = useDispatch();\n\n  const [id, setId] = useState(DEVICE_UID);\n  const [cellAvailability, setCellAvailability] = useState([]);\n  const [choiceCell, setChoiceCell] = useState(null);\n\n  const { cell_types } = useSelector(selectCellAvailability);\n\n  useEffect(() => {\n    setCellAvailability(cell_types);\n    setId(DEVICE_UID);\n    // eslint-disable-next-line\n  }, [DEVICE_UID, cell_types]);\n\n  useEffect(() => {\n    dispatch(fetchCellAvailability(id));\n  }, [dispatch, id]);\n\n  const onClick = e => {\n    setChoiceCell(e.target.getAttribute('id'));\n  };\n\n  return (\n    <div className={style.selectCellBox}>\n      <Title text=\"Оберіть розмір посилки\" />\n\n      {cellAvailability && (\n        <ul className={style.cellBox}>\n          {handlerCellData(cellAvailability, sizeMappings).map(\n            ({\n              type,\n              height,\n              name,\n              icon,\n              cellWidth,\n              cellHeight,\n              width,\n              isAvailable,\n            }) => (\n              <li\n                onClick={onClick}\n                style={{\n                  height: `${height}px`,\n                  width: `${width}px`,\n                }}\n                className={\n                  choiceCell === type\n                    ? style.cellEllIsChoice\n                    : isAvailable\n                    ? style.cellEll\n                    : style.cellEllNotAvailable\n                }\n                key={type}\n                id={type}\n              >\n                <img\n                  alt={name}\n                  src={icon}\n                  className={style.cellSvg}\n                  id={type}\n                />\n\n                <div className={style.cellTextBox} id={type}>\n                  <h3 className={style.cellTextTitle} id={type}>\n                    {name}\n                  </h3>\n                  <p className={style.cellTextDiscription} id={type}>\n                    {cellWidth}x{cellHeight}см\n                  </p>\n                </div>\n              </li>\n            )\n          )}\n        </ul>\n      )}\n\n      <ButtonNavigate\n        pathBtnBack={`/${DEVICE_UID}/packed`}\n        pathBtnNext={choiceCell ? `/${DEVICE_UID}/success` : '#'}\n        textBtnNext={choiceCell ? 'ПІДТВЕРДИТИ' : 'СПОЧАТКУ ОБЕРІТЬ РОЗМІР'}\n        className={style.btnNavigateBox}\n      />\n    </div>\n  );\n};\n","import { SelectCellSizes } from \"components/SelectCellSizes/SelectCellSizes\";\n\nconst CellSize = () => {\n  return (\n    <>\n      <SelectCellSizes/>\n        </>\n    );\n};\n\nexport default CellSize;","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["ButtonNavigate","pathBtnBack","pathBtnNext","textBtnNext","className","onClickNext","navigate","useNavigate","cn","style","to","onClick","Title","text","selectCellAvailability","state","cellAvailability","handlerCellData","cells","sizeMappings","filter","cell","Object","keys","includes","type","sort","a","b","areaA","params","height","width","areaB","map","name","isAvailable","has_empty","cellWidth","Math","round","cellHeight","icon","cellXXXL","SelectCellSizes","dispatch","useDispatch","useState","DEVICE_UID","id","setId","setCellAvailability","choiceCell","setChoiceCell","cell_types","useSelector","useEffect","fetchCellAvailability","e","target","getAttribute","alt","src","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","prototype","key","call","join","module","exports","default"],"sourceRoot":""}